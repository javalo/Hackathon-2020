[{"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/index.js":"1","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/App.js":"2","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/reportWebVitals.js":"3","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/navBar/Nav.js":"4","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/home/home.js":"5","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/auth/Register.js":"6","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/utility/FormValidation.js":"7","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/FormErrors.js":"8","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/aws-exports.js":"9","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/message/Message.js":"10","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/message/Msg.js":"11"},{"size":595,"mtime":1608157660160,"results":"12","hashOfConfig":"13"},{"size":973,"mtime":1608280794532,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608144481974,"results":"15","hashOfConfig":"13"},{"size":7421,"mtime":1608280789832,"results":"16","hashOfConfig":"13"},{"size":1942,"mtime":1608279987180,"results":"17","hashOfConfig":"13"},{"size":4433,"mtime":1608201322440,"results":"18","hashOfConfig":"13"},{"size":2744,"mtime":1608188842413,"results":"19","hashOfConfig":"13"},{"size":1125,"mtime":1608188944944,"results":"20","hashOfConfig":"13"},{"size":469,"mtime":1608205079848,"results":"21","hashOfConfig":"13"},{"size":1489,"mtime":1608272870614,"results":"22","hashOfConfig":"13"},{"size":1091,"mtime":1608279275518,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2ed17d",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/index.js",[],["49","50"],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/App.js",["51"],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/reportWebVitals.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/navBar/Nav.js",["52","53","54","55"],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/home/home.js",["56"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport CallIcon from '@material-ui/icons/Call';\n\nimport Msg from '../message/Msg'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  marg:{\n     marginTop:\"20px\",\n  },\n  fab: {\n    margin: theme.spacing.unit,\n    height: 140,\n    width: 140\n  },\n  smll:{\n    [theme.breakpoints.down(\"xs\")]: {\n        justifyContent: \"center\"\n      },\n      [theme.breakpoints.down(\"md\")]: {\n        justifyContent: \"center\"\n      }\n  },\n  paper: {\n    position: 'relative',\n       textAlign: 'center',\n       padding:\"50px\",\n    \n    height: 140,\n\n    color: theme.palette.text.secondary,\n  },\n  buttonStyle:{\n\n      color:\"secondary\",\n      \n      borderRadius: \"100%\",\n        size:\"large\"\n        \n  }\n}));\n\n\nconst defaultProps = {\n    bgcolor: 'background.paper',\n    borderColor: 'text.primary',\n    m: 1,\n    border: 1,\n    style: { width: '5rem', height: '5rem' },\n  };\n  const name1 = [{text:'J ai eu un accident'},{text:'Je suis temoin d un accident '},{text:'Je ne me sens pas bien'}];\n\nconst Home = () => {\n  const classes = useStyles();\n\n\n\n\n  return (\n    <div className={classes.root}>\n\n\n\n      <Grid container spacing={3}>\n\n        <Grid container  xs={12} md={3} lg={2} className={classes.smll} >  \n         \n        <Grid item >\n        <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab} > \n        <CallIcon style={{ fontSize: 60 }}></CallIcon>\n        </Fab>\n       </Grid>\n\n      </Grid>\n\n\n\n       <Grid container xs={12} md={9} lg={10} spacing={3} className={classes.marg}>\n\n\n       {name1.map(todo => <Grid item xs={4} md={4} lg={4}>\n         <Msg name={todo}/> </Grid>)}\n\n\n\n        </Grid>\n\n      </Grid>\n\n       <Grid container spacing={3} className={classes.marg} >\n       \n      </Grid>\n    </div>\n  );\n}\n\nexport default Home","/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/auth/Register.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/utility/FormValidation.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/FormErrors.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/aws-exports.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/message/Message.js",[],"/Users/javalo/Documents copie/WorkSpace_React/EDF-Hackathon/hackathon/src/components/message/Msg.js",["57","58"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport SmsIcon from '@material-ui/icons/Sms';\nimport TextsmsIcon from '@material-ui/icons/Textsms';\nimport { Fab } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\nconst  Msg = ({name}) => {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Fab color=\"primary\"><TextsmsIcon></TextsmsIcon></Fab>\n          </Grid>\n          <Grid item xs>\n            <Typography>{name.text}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n       \n    )\n}\nexport default  Msg",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":9,"nodeType":"65","messageId":"66","endLine":10,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":24,"column":8,"nodeType":"65","messageId":"66","endLine":24,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":28,"column":8,"nodeType":"65","messageId":"66","endLine":28,"endColumn":20},{"ruleId":"63","severity":1,"message":"69","line":30,"column":25,"nodeType":"65","messageId":"66","endLine":30,"endColumn":42},{"ruleId":"70","severity":1,"message":"71","line":76,"column":3,"nodeType":"72","messageId":"73","endLine":76,"endColumn":9},{"ruleId":"63","severity":1,"message":"74","line":50,"column":7,"nodeType":"65","messageId":"66","endLine":50,"endColumn":19},{"ruleId":"63","severity":1,"message":"75","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":14},{"ruleId":"63","severity":1,"message":"76","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":15},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'AmplifySignOut' is defined but never used.","Identifier","unusedVar","'ContactPhoneIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'withAuthenticator' is defined but never used.","no-dupe-keys","Duplicate key 'drawer'.","ObjectExpression","unexpected","'defaultProps' is assigned a value but never used.","'Avatar' is defined but never used.","'SmsIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]